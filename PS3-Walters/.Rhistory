for(ii in 1:length(lm$coefficients)){
print(sprintf("The  confidence interval (cluster-robust) for  is between %.3f and %.3f",
#names(lm$coefficients[ii]),
#percent,
lm$coefficients[ii]-lm$robust_se[ii]*se,
lm$coefficients[ii]+lm$robust_se[ii]*se
))
}
}
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm_1e <- lm(name_recall ~ treat_ad, combinedStudies_1e)
cluster_robuse_ci(lm_1e,1.96,"95%%")
#lm <- lm_1e
#lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
#for(ii in 1:length(lm$coefficients)){
#  print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
#    names(lm$coefficients[ii]),
#    lm$coefficients[ii]-lm$robust_se[ii]*1.96,
#    lm$coefficients[ii]+lm$robust_se[ii]*1.96
#    ))
#}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
summary(lm)
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm <- lm_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
summary(lm)
lm_4a <- lm(avg_bins_treat ~ bin, d)
lm <- lm_4a
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
lm_4a <- lm(avg_bins_treat ~ bin, d)
lm <- lm_4a
lm$robust_se <- sqrt(diag(vcovHC(lm)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
#
#lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
#for(ii in 1:length(lm$coefficients)){
#  print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
#    names(lm$coefficients[ii]),
#    lm$coefficients[ii]-lm$robust_se[ii]*1.96,
#    lm$coefficients[ii]+lm$robust_se[ii]*1.96
#    ))
#}
lm_4a <- lm(avg_bins_treat ~ bin, d)
lm <- lm_4a
lm$robust_se <- sqrt(diag(vcovHC(lm)))
for(ii in 2:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
#
#lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
#for(ii in 1:length(lm$coefficients)){
#  print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
#    names(lm$coefficients[ii]),
#    lm$coefficients[ii]-lm$robust_se[ii]*1.96,
#    lm$coefficients[ii]+lm$robust_se[ii]*1.96
#    ))
#}
lm_4b <- lm(avg_bins_treat ~ bin + base_avg_bins_treat, d)
lm <- lm_4b
lm$robust_se <- sqrt(diag(vcovHC(lm)))
for(ii in 2:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
d$street <- as.factor(d$street)
lm_4c <- lm(avg_bins_treat ~ bin + base_avg_bins_treat, d)
lm <- lm_4c
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in 2:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
d$street <- as.factor(d$street)
lm_4c <- lm(avg_bins_treat ~ bin + base_avg_bins_treat, d)
lm <- lm_4c
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_4f <- lm(avg_bins_treat ~ bin + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4c
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_4f <- lm(avg_bins_treat ~ bin + sms + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4c
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_4f <- lm(avg_bins_treat ~ bin + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4f
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_4g <- lm(avg_bins_treat ~ bin + sms + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
d$bin_g + d$bin_s + d$sms_g + d$sms_p
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm)
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=lm$robust_se)
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm <- combinedStudies_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm_1e <- lm(name_recall ~ treat_ad, combinedStudies_1e)
lm <- lm_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
summary(lm)
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm_1e <- lm(name_recall ~ treat_ad, combinedStudies_1e)
lm <- lm_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
stargazer(lm_1d,se=lm_1d$robust_se)
print("Assuming you still want clusters to be considered accross both studies")
study1_1a$isStudy1 <- 1
study2_1d$isStudy1 <- 0
combinedStudiesDummy_1f <- rbind(study1_1a,study2_1d)
lm_1f <- lm(name_recall ~ treat_ad + isStudy1, combinedStudiesDummy_1f)
lm <- lm_1f
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
summary(lm)
print("Assuming you still want clusters to be considered accross both studies")
study1_1a$isStudy1 <- 1
study2_1d$isStudy1 <- 0
combinedStudiesDummy_1f <- rbind(study1_1a,study2_1d)
lm_1f <- lm(name_recall ~ treat_ad + isStudy1, combinedStudiesDummy_1f)
lm <- lm_1f
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
stargazer(lm_1d,se=lm_1d$robust_se)
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("\begin{verbatim}The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f\end{verbatim}",
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("\\begin{verbatim} The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f \\end{verbatim}",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=lm$robust_se)
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("\\begin{verbatim} The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f \\end{verbatim}",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=lm$robust_se)
lm_4g <- lm(avg_bins_treat ~ d$bin_g + d$bin_s + d$sms_g + d$sms_p + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3,4,5)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=lm$robust_se)
stargazer(lm,report = "robust_se"")
stargazer(lm,report = "robust_se")
d <- read.csv("./data/ebola_rct2.csv")
head(d)
lm_5a <- lm(vomiting_day14 ~ treat_zmapp, d)
lm <- lm_5a
lm$robust_se <- sqrt(diag(vcovHC(lm)))
for(ii in 2:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
lm_5a <- lm(vomiting_day14 ~ treat_zmapp, d)
lm <- lm_5a
lm$robust_se <- sqrt(diag(vcovHC(lm)))
stargazer(lm,se=list(lm$robust_se), header=F)
lm_5b <- lm(vomiting_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0, d)
lm <- lm_5b
lm$robust_se <- sqrt(diag(vcovHC(lm)))
stargazer(lm,se=list(lm$robust_se), header=F)
lm_5f <- lm(vomiting_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0, d)
lm <- lm_5f
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ male)))
stargazer(lm,se=list(lm$robust_se), header=F)
lm_5f <- lm(temperature_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0 + male, d)
lm <- lm_5f
lm$robust_se <- sqrt(diag(vcovHC(lm)))
stargazer(lm,se=list(lm$robust_se), header=F)
lm_5f <- lm(temperature_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0 + male*treat_zmapp, d)
lm <- lm_5f
lm$robust_se <- sqrt(diag(vcovHC(lm)))
lm_5f <- lm(temperature_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0 + male*treat_zmapp, d)
lm <- lm_5f
lm$robust_se <- sqrt(diag(vcovHC(lm)))
stargazer(lm,se=list(lm$robust_se), header=F)
lm_5f <- lm(temperature_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0 + male + male*treat_zmapp, d)
lm <- lm_5f
lm$robust_se <- sqrt(diag(vcovHC(lm)))
stargazer(lm,se=list(lm$robust_se), header=F)
# load packages
library(data.table)
library(foreign)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(stargazer)
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm_1e <- lm(name_recall ~ treat_ad, combinedStudies_1e)
lm <- lm_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.16f",summary(lm)$coefficients[2,4]))
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm_1e <- lm(name_recall ~ treat_ad, combinedStudies_1e)
lm <- lm_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt x is %.3f",lm$coefficients[2]))
print(sprintf("The p-value is %.18f",summary(lm)$coefficients[2,4]))
print("Assuming you still want clusters to be considered accross both studies")
combinedStudies_1e <- rbind(study1_1a,study2_1d)
lm_1e <- lm(name_recall ~ treat_ad, combinedStudies_1e)
lm <- lm_1e
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt %s is %.3f",names(lm$coefficients[2]),lm$coefficients[2]))
print(sprintf("The p-value is %.18f",summary(lm)$coefficients[2,4]))
print("Assuming you still want clusters to be considered accross both studies")
study1_1a$isStudy1 <- 1
study2_1d$isStudy1 <- 0
combinedStudiesDummy_1f <- rbind(study1_1a,study2_1d)
lm_1f <- lm(name_recall ~ treat_ad + isStudy1, combinedStudiesDummy_1f)
lm <- lm_1f
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ cluster)))
for(ii in 1:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
print(sprintf("The ATE of treatemnt %s is %.3f",names(lm$coefficients[2]),lm$coefficients[2]))
print(sprintf("The p-value is %.3f",summary(lm)$coefficients[2,4]))
print(sprintf("%.3f",(length(study1_1a[study1_1a$treat_ad==1])/length(study1_1a))))
print(sprintf("%.3f",(length(study1_1a$treat_ad[study1_1a$treat_ad==1])/length(study1_1a))))
print(sprintf("%.3f",(length(study2_1d[study2_1d$treat_ad==1])/length(study2_1d))))
print(sprintf("%.3f",(length(study1_1a$treat_ad[study1_1a$treat_ad==1])/length(study1_1a))))
print(sprintf("%.3f",(length(study2_1d$treat_ad[study2_1d$treat_ad==1])/length(study2_1d))))
print(sprintf("%.3f",(length(study1_1a$treat_ad[study1_1a$treat_ad==1])/length(study1_1a$treat_ad))))
print(sprintf("%.3f",(length(study2_1d$treat_ad[study2_1d$treat_ad==1])/length(study2_1d))))
print(sprintf("%.3f",(length(study1_1a$treat_ad[study1_1a$treat_ad==1])/length(study1_1a$treat_ad))))
print(sprintf("%.3f",(length(study2_1d$treat_ad[study2_1d$treat_ad==1])/length(study2_1d$treat_ad))))
print(sprintf("Treatment Rate in Study 1: %.3f",(length(study1_1a$treat_ad[study1_1a$treat_ad==1])/length(study1_1a$treat_ad))))
print(sprintf("Treatment Rate in Study 2: %.3f",(length(study2_1d$treat_ad[study2_1d$treat_ad==1])/length(study2_1d$treat_ad))))
d$no_cell_phone <- 1-d$havecell
d <- read.dta("./data/karlan_data_subset_for_class.dta")
head(d)
# distribution of continuous variables
hist(d$avg_bins_treat)
hist(d$base_avg_bins_treat)
hist(d$street)
# which dummy variables have NAs
unique(d$havecell)
unique(d$bin)
unique(d$sms)
unique(d$bin_s)
unique(d$bin_g)
unique(d$sms_p)
unique(d$sms_g)
# remove na rows
d <- d[rowSums(!is.na(d)) > 0,]
## Do some quick exploratory data analysis with this data. There are some values in this data that seem a bit strange. Determine what these are, and figure out what you would like to do with them. Also, notice what happens with your estimates vis-a-vis the estimates that are produced by the authors when you do something sensible with this strange values.
lm_4a <- lm(avg_bins_treat ~ bin, d)
lm <- lm_4a
lm$robust_se <- sqrt(diag(vcovHC(lm)))
for(ii in 2:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=list(lm$robust_se), header=F)
lm_4b <- lm(avg_bins_treat ~ bin + base_avg_bins_treat, d)
lm <- lm_4b
lm$robust_se <- sqrt(diag(vcovHC(lm)))
for(ii in 2:length(lm$coefficients)){
print(sprintf("The 95%% confidence interval (robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=list(lm$robust_se), header=F)
d$street <- as.factor(d$street)
lm_4c <- lm(avg_bins_treat ~ bin + base_avg_bins_treat, d)
lm <- lm_4c
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=list(lm$robust_se), header=F)
d$no_cell_phone <- 1-d$havecell
head(d)
lm_4f <- lm(avg_bins_treat ~ bin + base_avg_bins_treat + no_cell_phone, d)
lm <- lm_4f
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=list(lm$robust_se), header=F)
lm_4g <- lm(avg_bins_treat ~ bin + sms + base_avg_bins_treat + havecell, d)
lm <- lm_4g
lm$robust_se <- sqrt(diag(cluster.vcov(lm, ~ street)))
for(ii in list(2,3)){
print(sprintf("The 95%% confidence interval (cluster-robust) for %s is between %.3f and %.3f",
names(lm$coefficients[ii]),
lm$coefficients[ii]-lm$robust_se[ii]*1.96,
lm$coefficients[ii]+lm$robust_se[ii]*1.96
))
}
stargazer(lm,se=list(lm$robust_se), header=F)
lm_5a <- lm(vomiting_day14 ~ treat_zmapp, d)
d <- read.csv("./data/ebola_rct2.csv")
head(d)
lm_5a <- lm(vomiting_day14 ~ treat_zmapp, d)
lm <- lm_5a
lm$robust_se <- sqrt(diag(vcovHC(lm)))
print(sprintf("The ATE of treatemnt %s is %.3f",names(lm$coefficients[2]),lm$coefficients[2]))
print(sprintf("The p-value is %.5f",summary(lm)$coefficients[2,4]))
lm_5b <- lm(vomiting_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0, d)
lm <- lm_5b
lm$robust_se <- sqrt(diag(vcovHC(lm)))
print(sprintf("The ATE of treatemnt %s is %.3f",names(lm$coefficients[2]),lm$coefficients[2]))
print(sprintf("The p-value is %.5f",summary(lm)$coefficients[2,4]))
lm_5c <- lm(vomiting_day14 ~ treat_zmapp + vomiting_day0 + temperature_day0 + temperature_day14, d)
lm <- lm_5c
lm$robust_se <- sqrt(diag(vcovHC(lm)))
print(sprintf("The ATE of treatemnt %s is %.3f",names(lm$coefficients[2]),lm$coefficients[2]))
print(sprintf("The p-value is %.5f",summary(lm)$coefficients[2,4]))
